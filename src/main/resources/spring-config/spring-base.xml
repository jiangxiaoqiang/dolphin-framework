<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd  
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

	<description>spring主配置文件</description>
	<util:properties id="applicationProperties" location="classpath:application.properties" />
	<context:property-placeholder properties-ref="applicationProperties" 
		ignore-resource-not-found="true" /> 

	<context:component-scan base-package="dolphin.service.*,dolphin.controller.*">
		<!-- <context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect" 
			/> <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" 
			/> <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController" 
			/> <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" 
			/> -->
	</context:component-scan>

	<!--aop 注解风格支持 proxy-targer-class默认false,用jdk动态代理,true是cglib .expose-proxy当前代理是否为可暴露状态,值是"ture",则为可访问。 -->
	<aop:aspectj-autoproxy expose-proxy="true"
		proxy-target-class="true" />
	<aop:config expose-proxy="true" proxy-target-class="true" />

	<import resource="classpath:spring-config/spring-mybatis.xml" />
	<import resource="classpath:spring-config/spring-datasource.xml" />
</beans>